{"version":3,"sources":["App.js","index.js"],"names":["App","state","mainGameField","zeros","possibleAddNumbers","gameOver","setState","i","setTimeout","prevState","nextMainGameField","addNewField","playerWins","handleKeyDown","event","preventDefault","key","plusZeros","tempArr","push","sort","a","b","i2","splice","unshift","tempColumnArr","i3","countOfZeros","randomOfZeros","Math","ceil","random","floor","handleTouchStart","clientXStart","nativeEvent","changedTouches","clientX","clientYStart","clientY","handleTouchEnd","clientXEnd","clientYEnd","deltaX","deltaY","abs","this","className","type","onKeyDown","onTouchStart","onTouchEnd","map","row","rowIndex","cell","columnIndex","React","Component","ReactDOM","render","document","getElementById","querySelector","focus"],"mappings":"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","file":"static/js/main.3ce0aaa0.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nclass App extends React.Component {\n  state = {\n    mainGameField: [[0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0]],\n    zeros: 16,\n  }\n\n  possibleAddNumbers = [2, 2, 2, 2, 2, 4, 2, 2, 2, 2]\n\n  componentDidMount() {\n    this.addNewField();\n  }\n\n  gameOver = () => {\n    this.setState({\n      mainGameField: [[0, 0, 0, 0],\n        ['G', 'A', 'M', 'E'],\n        ['O', 'V', 'E', 'R'],\n        [0, 0, 0, 0]],\n    });\n    for (let i = 0; i < 6; i += 1) {\n      setTimeout(() => {\n        this.setState((prevState) => {\n          const nextMainGameField = [...prevState.mainGameField];\n\n          nextMainGameField[3][0] = 5 - i;\n\n          return ({\n            mainGameField: nextMainGameField,\n          });\n        });\n      }, 1000 * i);\n    }\n\n    setTimeout(() => {\n      this.setState({\n        mainGameField: [[0, 0, 0, 0],\n          [0, 0, 0, 0],\n          [0, 0, 0, 0],\n          [0, 0, 0, 0]],\n        zeros: 16,\n      });\n      this.addNewField();\n    }, 6000);\n  }\n\n  playerWins = () => {\n    this.setState({\n      mainGameField: [[0, 0, 0, 0],\n        ['Y', 'O', 'U', 0],\n        ['W', 'I', 'N', 0],\n        [0, 0, 0, 0]],\n    });\n    for (let i = 0; i < 10; i += 1) {\n      setTimeout(() => {\n        this.setState((prevState) => {\n          const nextMainGameField = [...prevState.mainGameField];\n\n          nextMainGameField[3][0] = 10 - i;\n\n          return ({\n            mainGameField: nextMainGameField,\n          });\n        });\n      }, 1000 * i);\n    }\n\n    setTimeout(() => {\n      this.setState({\n        mainGameField: [[0, 0, 0, 0],\n          [0, 0, 0, 0],\n          [0, 0, 0, 0],\n          [0, 0, 0, 0]],\n        zeros: 16,\n      });\n      this.addNewField();\n    }, 10000);\n  }\n\n  handleKeyDown = (event) => {\n    if (event.preventDefault) {\n      event.preventDefault();\n    }\n\n    if (event.key === 'ArrowRight') {\n      this.setState((prevState) => {\n        let plusZeros = 0;\n        const tempArr = [];\n\n        for (let i = 0; i < 4; i += 1) {\n          tempArr.push([...prevState.mainGameField[i]]);\n          tempArr[i].sort((a, b) => {\n            if (a === 0 && b !== 0) {\n              return -1;\n            }\n\n            if (a !== 0 && b !== 0) {\n              return 0;\n            }\n\n            if (a !== 0 && b === 0) {\n              return 1;\n            }\n\n            return 0;\n          });\n\n          for (let i2 = 3; i2 > 0; i2 -= 1) {\n            if (tempArr[i][i2] === tempArr[i][i2 - 1]\n              && tempArr[i][i2] !== 0) {\n              tempArr[i][i2] *= 2;\n              if (tempArr[i][i2] === 2048) {\n                this.playerWins();\n              }\n\n              tempArr[i].splice(i2 - 1, 1);\n              tempArr[i].unshift(0);\n              plusZeros += 1;\n            }\n          }\n        }\n\n        return ({\n          mainGameField: [...tempArr],\n          zeros: prevState.zeros + plusZeros,\n        });\n      });\n      setTimeout(this.addNewField, 500);\n    }\n\n    if (event.key === 'ArrowLeft') {\n      this.setState((prevState) => {\n        let plusZeros = 0;\n        const tempArr = [];\n\n        for (let i = 0; i < 4; i += 1) {\n          tempArr.push([...prevState.mainGameField[i]]);\n          tempArr[i].sort((a, b) => {\n            if (a === 0 && b !== 0) {\n              return 1;\n            }\n\n            if (a !== 0 && b !== 0) {\n              return 0;\n            }\n\n            if (a !== 0 && b === 0) {\n              return -1;\n            }\n\n            return 0;\n          });\n\n          for (let i2 = 0; i2 < 3; i2 += 1) {\n            if (tempArr[i][i2] === tempArr[i][i2 + 1]\n              && tempArr[i][i2] !== 0) {\n              tempArr[i][i2] *= 2;\n              if (tempArr[i][i2] === 2048) {\n                this.playerWins();\n              }\n\n              tempArr[i].splice(i2 + 1, 1);\n              tempArr[i].push(0);\n              plusZeros += 1;\n            }\n          }\n        }\n\n        return ({\n          mainGameField: [...tempArr],\n          zeros: prevState.zeros + plusZeros,\n        });\n      });\n      setTimeout(this.addNewField, 500);\n    }\n\n    if (event.key === 'ArrowDown') {\n      this.setState((prevState) => {\n        let plusZeros = 0;\n        const tempArr = [...prevState.mainGameField];\n\n        for (let i = 0; i < 4; i += 1) {\n          const tempColumnArr = [];\n\n          for (let i3 = 0; i3 < 4; i3 += 1) {\n            tempColumnArr.push(prevState.mainGameField[i3][i]);\n          }\n\n          tempColumnArr.sort((a, b) => {\n            if (a === 0 && b !== 0) {\n              return -1;\n            }\n\n            if (a !== 0 && b !== 0) {\n              return 0;\n            }\n\n            if (a !== 0 && b === 0) {\n              return 1;\n            }\n\n            return 0;\n          });\n\n          for (let i2 = 3; i2 > 0; i2 -= 1) {\n            if (tempColumnArr[i2] === tempColumnArr[i2 - 1]\n              && tempColumnArr[i2] !== 0) {\n              tempColumnArr[i2] *= 2;\n              if (tempColumnArr[i2] === 2048) {\n                this.playerWins();\n              }\n\n              tempColumnArr.splice(i2 - 1, 1);\n              tempColumnArr.unshift(0);\n              plusZeros += 1;\n            }\n          }\n\n          for (let i2 = 0; i2 < 4; i2 += 1) {\n            tempArr[i2][i] = tempColumnArr[i2];\n          }\n        }\n\n        return ({\n          mainGameField: [...tempArr],\n          zeros: prevState.zeros + plusZeros,\n        });\n      });\n      setTimeout(this.addNewField, 500);\n    }\n\n    if (event.key === 'ArrowUp') {\n      this.setState((prevState) => {\n        let plusZeros = 0;\n        const tempArr = [...prevState.mainGameField];\n\n        for (let i = 0; i < 4; i += 1) {\n          const tempColumnArr = [];\n\n          for (let i3 = 0; i3 < 4; i3 += 1) {\n            tempColumnArr.push(prevState.mainGameField[i3][i]);\n          }\n\n          tempColumnArr.sort((a, b) => {\n            if (a === 0 && b !== 0) {\n              return 1;\n            }\n\n            if (a !== 0 && b !== 0) {\n              return 0;\n            }\n\n            if (a !== 0 && b === 0) {\n              return -1;\n            }\n\n            return 0;\n          });\n\n          for (let i2 = 0; i2 < 3; i2 += 1) {\n            if (tempColumnArr[i2] === tempColumnArr[i2 + 1]\n              && tempColumnArr[i2] !== 0) {\n              tempColumnArr[i2] *= 2;\n              if (tempColumnArr[i2] === 2048) {\n                this.playerWins();\n              }\n\n              tempColumnArr.splice(i2 + 1, 1);\n              tempColumnArr.push(0);\n              plusZeros += 1;\n            }\n          }\n\n          for (let i2 = 0; i2 < 4; i2 += 1) {\n            tempArr[i2][i] = tempColumnArr[i2];\n          }\n        }\n\n        return ({\n          mainGameField: [...tempArr],\n          zeros: prevState.zeros + plusZeros,\n        });\n      });\n      setTimeout(this.addNewField, 500);\n    }\n  }\n\n  addNewField = () => {\n    if (this.state.zeros === 0) {\n      this.gameOver();\n    } else {\n      let countOfZeros = 0;\n      const randomOfZeros = Math.ceil(Math.random() * this.state.zeros);\n\n      for (let i = 0; i < 4; i += 1) {\n        for (let i2 = 0; i2 < 4; i2 += 1) {\n          if (this.state.mainGameField[i][i2] === 0) {\n            countOfZeros += 1;\n            if (countOfZeros === randomOfZeros) {\n              const nextMainGameField = [...this.state.mainGameField];\n\n              nextMainGameField[i][i2] = this\n                .possibleAddNumbers[Math.floor(Math.random() * 10)];\n              this.setState(prevState => ({\n\n                mainGameField: [...nextMainGameField],\n                zeros: prevState.zeros - 1,\n              }\n              ));\n            }\n          }\n        }\n      }\n    }\n  }\n\n  handleTouchStart = (event) => {\n    // event.nativeEvent.preventDefault()\n    this.clientXStart = event.nativeEvent.changedTouches[0].clientX;\n    this.clientYStart = event.nativeEvent.changedTouches[0].clientY;\n  }\n\n  handleTouchEnd = (event) => {\n    // event.preventDefault()\n    this.clientXEnd = event.nativeEvent.changedTouches[0].clientX;\n    this.clientYEnd = event.nativeEvent.changedTouches[0].clientY;\n    const deltaX = this.clientXStart - this.clientXEnd;\n    const deltaY = this.clientYStart - this.clientYEnd;\n\n    if (Math.abs(deltaY) > Math.abs(deltaX) && deltaY < -50) {\n      this.handleKeyDown({ key: 'ArrowDown' });\n    }\n\n    if (Math.abs(deltaY) > Math.abs(deltaX) && deltaY > 50) {\n      this.handleKeyDown({ key: 'ArrowUp' });\n    }\n\n    if (Math.abs(deltaY) < Math.abs(deltaX) && deltaX < -50) {\n      this.handleKeyDown({ key: 'ArrowRight' });\n    }\n\n    if (Math.abs(deltaY) < Math.abs(deltaX) && deltaX > 50) {\n      this.handleKeyDown({ key: 'ArrowLeft' });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"game2048\">\n        <h1 className=\"game2048__title\">2048</h1>\n\n        <p className=\"game2048__rulesUkr\">\n          <strong>ЯК ГРАТИ:</strong>\n          {' '}\n          Для переміщення блоків\n          використовуйте клавіші зі стрілками\n          (або свайп на сенсорних екранах). Коли два\n          блоки з однаковим номером зтикаються, вони\n          зливаються в один сумарний.\n\n        </p>\n        <p>\n          Досягніть числа\n          {' '}\n          <strong>2048</strong>\n          {' '}\n          !!!\n        </p>\n\n        <button\n          type=\"button\"\n          className=\"game2048__container\"\n          onKeyDown={this.handleKeyDown}\n          onTouchStart={this.handleTouchStart}\n          onTouchEnd={this.handleTouchEnd}\n        >\n          {this.state.mainGameField.map((row, rowIndex) => (\n\n            <ul className=\"game2048__row\">\n              {row.map((cell, columnIndex) => (\n                <li\n                  // key={`${rowIndex}, ${columnIndex}`}\n                  className={`game2048__cell game2048__cell--${cell}`}\n                >\n                  {cell === 0 ? '' : cell}\n                </li>\n              ))\n\n              }\n            </ul>\n\n          ))\n\n          }\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\ndocument.querySelector('.game2048__container').focus();\n"],"sourceRoot":""}