// Mixins

// Breakpoints
// Extra small devices
@mixin xs {
  @media (min-width: #{$xs}) {
    @content;
  }
}

// Small devices
@mixin sm {
  @media (min-width: #{$sm}) {
    @content;
  }
}

// Medium devices
@mixin md {
  @media (min-width: #{$md}) {
    @content;
  }
}

// Tablets
@mixin lg {
  @media (min-width: #{$lg}) {
    @content;
  }
}

// Tablets and desktops
@mixin xl {
  @media (min-width: #{$xl}) {
    @content;
  }
}

// Medium desktops
@mixin xxl {
  @media (min-width: #{$xxl}) {
    @content;
  }
}

// Large desktops
@mixin xxxl {
  @media (min-width: #{$xxxl}) {
    @content;
  }
}

// Custom screen with max/min-width parameters
@mixin responsive($media_feature, $screen) {
  @media (#{$media_feature}: #{$screen}) {
    @content;
  }
}

// Custom screen with two max / min-width / -height parameters
@mixin responsive_two($break1, $break2, $screen1, $screen2) {
 @if ($break1 and $break2) {
   $break2: $break1 !default;
    @media (#{$break1}: #{$screen1}) and (#{$break2}: #{$screen2}) {
      @content;
    }
 }
 @else if ($break2 == null) {
    @media (#{$break1}: #{$screen1}) {
      @content;
    }
  }
}

// e.g. as previous one + orientation
@mixin responsive_three($break1, $break2, $break3, $par1, $par2, $par3) {
  @media (#{$break1}: #{$par1}) and (#{$break2}: #{$par2}) and (#{$break3}: #{$par3}) {
    @content;
  }
}

// at-root mixin
@mixin optional-at-root($sel) {
  @at-root #{if(not &, $sel, selector-append(&, $sel))} {
    @content;
  }
}
